// <auto-generated />
using System;
using GuessCode.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GuessCode.DAL.Migrations
{
    [DbContext(typeof(GuessContext))]
    partial class GuessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GuessCode.DAL.Models.KataAggregate.Kata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<int>("KataDifficulty")
                        .HasColumnType("integer");

                    b.Property<string>("KataRawJsonContent")
                        .HasColumnType("text");

                    b.Property<int>("KataType")
                        .HasColumnType("integer");

                    b.Property<int>("PointsReward")
                        .HasColumnType("integer");

                    b.Property<int>("ProgrammingLanguage")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Kata");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.KataAggregate.KataCodeExecutionResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Error")
                        .HasColumnType("text");

                    b.Property<long>("ExecutedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("KataId")
                        .HasColumnType("bigint");

                    b.Property<string>("Output")
                        .HasColumnType("text");

                    b.Property<int>("PassedTestCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalTestCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KataId");

                    b.ToTable("KataCodeExecutionResult");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.RoleAggregate.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.GitHubProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GitHubProfile");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.RatingChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ChangeReason")
                        .HasColumnType("integer");

                    b.Property<long>("ChangedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RatingChangeValue")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RatingChange");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("GitHubProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("integer");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("KataUser", b =>
                {
                    b.Property<long>("ResolvedKatasId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ResolvedKatasId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Kata_User_Resolved", (string)null);
                });

            modelBuilder.Entity("GuessCode.DAL.Models.KataAggregate.Kata", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.UserAggregate.User", "Author")
                        .WithMany("AuthoredKatas")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.KataAggregate.KataCodeExecutionResult", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.KataAggregate.Kata", "Kata")
                        .WithMany("KataCodeExecutionResults")
                        .HasForeignKey("KataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kata");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.GitHubProfile", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.UserAggregate.User", "User")
                        .WithOne("GitHubProfile")
                        .HasForeignKey("GuessCode.DAL.Models.UserAggregate.GitHubProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.RatingChange", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.UserAggregate.User", "User")
                        .WithMany("RatingChanges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.User", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.RoleAggregate.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.UserProfile", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.UserAggregate.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("GuessCode.DAL.Models.UserAggregate.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KataUser", b =>
                {
                    b.HasOne("GuessCode.DAL.Models.KataAggregate.Kata", null)
                        .WithMany()
                        .HasForeignKey("ResolvedKatasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuessCode.DAL.Models.UserAggregate.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GuessCode.DAL.Models.KataAggregate.Kata", b =>
                {
                    b.Navigation("KataCodeExecutionResults");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.RoleAggregate.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GuessCode.DAL.Models.UserAggregate.User", b =>
                {
                    b.Navigation("AuthoredKatas");

                    b.Navigation("GitHubProfile");

                    b.Navigation("RatingChanges");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
