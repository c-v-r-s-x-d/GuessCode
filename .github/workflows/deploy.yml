name: Deploy to k3s

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/guesscode-api,${{ secrets.DOCKER_USERNAME }}/guesscode-scheduler,${{ secrets.DOCKER_USERNAME }}/java-runner,${{ secrets.DOCKER_USERNAME }}/cpp-runner,${{ secrets.DOCKER_USERNAME }}/csharp-runner${{ secrets.DOCKER_USERNAME }}/python-runner
          tags: |
            type=sha
            type=raw,value=latest

      - name: Set environment variables
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.API/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/guesscode-api:${{ github.sha }}

      - name: Build and push Scheduler image
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.Scheduler/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/guesscode-scheduler:${{ github.sha }}
          
      - name: Build and push cpp-compiler
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.Scheduler/compilers/cpp-runner/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cpp-runner:latest
          
      - name: Build and push csharp-compiler
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.Scheduler/compilers/csharp-runner/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/csharp-runner:latest
          
      - name: Build and push java-compiler
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.Scheduler/compilers/java-runner/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/java-runner:latest
          
      - name: Build and push python-interpreter
        uses: docker/build-push-action@v5
        with:
          file: ./src/GuessCode/GuessCode.Scheduler/compilers/python-runner/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/python-runner:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH Key (Infra deploy 1/4)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: Create directory on remote server (Infra deploy 2/4)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /home/${{ secrets.SSH_USER }}"

      - name: Copy infra.yml to remote server (Infra deploy 3/4)
        run: |
          scp infra.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/infra.yml

      - name: Deploy containers on remote server (Infra deploy 4/4)
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker compose -f /home/${{ secrets.SSH_USER }}/infra.yml down --remove-orphans
            docker compose -f /home/${{ secrets.SSH_USER }}/infra.yml up -d
          EOF
      
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K3S_KUBECONFIG }}

      - name: Verify Kubernetes context
        run: kubectl config current-context

      - name: Test Kubernetes cluster connectivity
        run: kubectl cluster-info

      - name: Check if dev namespace exists
        run: kubectl get namespace dev || kubectl create namespace dev

      - name: Install NGINX Ingress Controller (if not installed)
        run: |
          kubectl get ns ingress-nginx || kubectl create namespace ingress-nginx
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

      - name: Update image references in start-application.yml
        run: |
          sed -i "s|my-dockerhub-username|${{ secrets.DOCKER_USERNAME }}|g" start-application.yml

      - name: Deploy to k3s
        run: |
          kubectl apply -f start-application.yml
          kubectl set image deployment/guesscode-api guesscode-api-container=${{ secrets.DOCKER_USERNAME }}/guesscode-api:${{ github.sha }} -n dev
          kubectl set image deployment/guesscode-scheduler guesscode-scheduler-container=${{ secrets.DOCKER_USERNAME }}/guesscode-scheduler:${{ github.sha }} -n dev